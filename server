import socket
import thread
import select

serverPort = 12020
serverSocket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
serverSocket.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
serverSocket.bind(('',serverPort))
serverSocket.listen(5)
print 'The server is ready to receive'

list_name = ['user1', 'user2','user3']
list_pwd = ['0000', '0001','0010']
online = ['0','0','0']
ex_socket = ['0','0','0']

#CONNECTION_LIST = []
connect_soc = []
string_name = (" ".join(list_name))

log_in_suc = 0

def log_in():
    #check username & password
    name = connectionSocket.recv(1024)
    for i in range(len(list_name)):
        if name == list_name[i]:
            no_find = 0
            #num = i
            print 'right user'
            connectionSocket.send('01')
            #password
            passwd = connectionSocket.recv(1024)
            print passwd
            if passwd == list_pwd[i]:
                print 'right password'
                log_in_suc = 1
                online[i] = 1
                connectionSocket.send('02')
            else:
                print 'error passwd'
    if no_find == 1:
        print 'error user'

def acceptThread(connSock):
    print 'client is accepted'
    
    #command mode
    command_rec = connSock.recv(1024)   #get mode
    print command_rec
    
    #chat mode
    CONNECTION_LIST = [connSock]
    if command_rec == '1':
        r_sockets, w_sockets, e_sockets = select.select(CONNECTION_LIST,[],CONNECTION_LIST)
        if (e_sockets):
            return
        
        chat_user = connSock.recv(1024) #get username
        for j in range(len(list_name)):
            if chat_user == list_name[j]:
                if online[j] == 1:
                    print 'user exist'
                    break
                                    
        #CONNECTION_LIST.append(connSock)
        r_sockets, w_sockets, e_sockets = select.select(CONNECTION_LIST,[],[])

        for sock in r_sockets:
            data = sock.recv(1024)
            print data
            if data == '\quit\n':
                break
            if data[0:4] == 'send':
                for i in range(len(list_name)):
                    if ex_socket[i] != '0':
                        ex_socket[i].send(data)
            else:
                sock.send(data)

    #list
    elif command_rec == '2':
        num = 0
        for k in range(len(list_name)):
            if online[k] == 1:
                num = num + 1
                onlie_num  = str(num)
                connSock.send(onlie_num)
        for k in range(len(list_name)):
            if online[k] == 1:
                connSock.send(list_name[k])
                print list_name[k]

    #broadcast
    elif command_rec == '3':
        #msg = connSock.recv(1024)
        #for k in range(len(list_name)):
        #    if ex_socket[k] == 1:
        #        ex_socket[k].send(msg)
        message = connSock.recv(1024)
        print message
        broadcast_data (connSock, message)

    elif command_rec == '4':
        for k in range(len(list_name)):
            online[k] == 0
    
    connSock.close()


while 1:
    connectionSocket, addr = serverSocket.accept()

    no_find = 1
    log_in()

    for k in range(len(list_name)):
        if online[k] == 1:
            ex_socket[k] = connectionSocket

    thread.start_new_thread(acceptThread, (connectionSocket,))
    
connectionSocket.close()
